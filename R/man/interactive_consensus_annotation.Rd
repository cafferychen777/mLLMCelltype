% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consensus_annotation.R
\name{interactive_consensus_annotation}
\alias{interactive_consensus_annotation}
\title{Interactive consensus building for cell type annotation}
\usage{
interactive_consensus_annotation(
  input,
  tissue_name = NULL,
  models = c("claude-3-7-sonnet-20250219", "claude-3-5-sonnet-latest",
    "claude-3-5-haiku-latest", "gemini-2.0-flash", "gemini-1.5-pro",
    "qwen-max-2025-01-25", "gpt-4o", "grok-3-latest"),
  api_keys,
  top_gene_count = 10,
  controversy_threshold = 0.7,
  entropy_threshold = 1,
  max_discussion_rounds = 3,
  consensus_check_model = NULL,
  log_dir = "logs",
  cache_dir = "consensus_cache",
  use_cache = TRUE
)
}
\arguments{
\item{input}{One of the following:
\itemize{
\item A data frame from Seurat's FindAllMarkers() function containing differential gene expression results
(must have columns: 'cluster', 'gene', and 'avg_log2FC'). The function will select the top genes
based on avg_log2FC for each cluster.
\item A list where each element has a 'genes' field containing marker genes for a cluster.
This can be in one of these formats:
\itemize{
\item Named with cluster IDs: list("0" = list(genes = c(...)), "1" = list(genes = c(...)))
\item Named with cell type names: list(t_cells = list(genes = c(...)), b_cells = list(genes = c(...)))
\item Unnamed list: list(list(genes = c(...)), list(genes = c(...)))
}
\item For both input types, if cluster IDs are numeric and start from 1, they will be automatically
converted to 0-based indexing (e.g., cluster 1 becomes cluster 0) for consistency.
}}

\item{tissue_name}{Optional input of tissue name}

\item{models}{Vector of model names to participate in the discussion. Supported models:
\itemize{
\item OpenAI: 'gpt-4o', 'o1'
\item Anthropic: 'claude-3-7-sonnet-20250219', 'claude-3-5-sonnet-latest', 'claude-3-5-haiku-latest', 'claude-3-opus'
\item DeepSeek: 'deepseek-chat', 'deepseek-reasoner'
\item Google: 'gemini-2.0-flash', 'gemini-2.0-flash-exp', 'gemini-1.5-pro', 'gemini-1.5-flash'
\item Alibaba: 'qwen-max-2025-01-25'
\item Stepfun: 'step-2-16k', 'step-2-mini', 'step-1-8k'
\item Zhipu: 'glm-4-plus', 'glm-3-turbo'
\item MiniMax: 'minimax-text-01'
\item X.AI: 'grok-3-latest', 'grok-3', 'grok-3-fast', 'grok-3-fast-latest', 'grok-3-mini', 'grok-3-mini-latest', 'grok-3-mini-fast', 'grok-3-mini-fast-latest'
\item OpenRouter: Provides access to models from multiple providers through a single API. Format: 'provider/model-name'
\itemize{
\item OpenAI models: 'openai/gpt-4o', 'openai/gpt-4o-mini', 'openai/gpt-4-turbo', 'openai/gpt-4', 'openai/gpt-3.5-turbo'
\item Anthropic models: 'anthropic/claude-3-7-sonnet-20250219', 'anthropic/claude-3-5-sonnet-latest', 'anthropic/claude-3-5-haiku-latest', 'anthropic/claude-3-opus'
\item Meta models: 'meta-llama/llama-3-70b-instruct', 'meta-llama/llama-3-8b-instruct', 'meta-llama/llama-2-70b-chat'
\item Google models: 'google/gemini-2.5-pro-preview-03-25', 'google/gemini-1.5-pro-latest', 'google/gemini-1.5-flash'
\item Mistral models: 'mistralai/mistral-large', 'mistralai/mistral-medium', 'mistralai/mistral-small'
\item Other models: 'microsoft/mai-ds-r1', 'perplexity/sonar-small-chat', 'cohere/command-r', 'deepseek/deepseek-chat', 'thudm/glm-z1-32b'
}
}}

\item{api_keys}{Named list of API keys. Can be provided in two formats:
\enumerate{
\item With provider names as keys: \code{list("openai" = "sk-...", "anthropic" = "sk-ant-...", "openrouter" = "sk-or-...")}
\item With model names as keys: \code{list("gpt-4o" = "sk-...", "claude-3-opus" = "sk-ant-...")}
}

The system first tries to find the API key using the provider name. If not found, it then tries using the model name.
Example:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{api_keys <- list(
  "openai" = Sys.getenv("OPENAI_API_KEY"),
  "anthropic" = Sys.getenv("ANTHROPIC_API_KEY"),
  "openrouter" = Sys.getenv("OPENROUTER_API_KEY"),
  "claude-3-opus" = "sk-ant-api03-specific-key-for-opus"
)
}\if{html}{\out{</div>}}}

\item{top_gene_count}{Number of top differential genes to use}

\item{controversy_threshold}{Consensus proportion threshold (default: 0.7). Clusters with consensus proportion below this value will be marked as controversial}

\item{entropy_threshold}{Entropy threshold for identifying controversial clusters (default: 1.0)}

\item{max_discussion_rounds}{Maximum number of discussion rounds for controversial clusters (default: 3)}

\item{consensus_check_model}{Model to use for consensus checking}

\item{log_dir}{Directory for storing logs}

\item{cache_dir}{Directory for storing cache}

\item{use_cache}{Whether to use cached results}
}
\value{
A list containing consensus results, logs, and annotations

A list containing consensus results, logs, and annotations
}
\description{
This function implements an interactive voting and discussion mechanism where multiple LLMs
collaborate to reach a consensus on cell type annotations, particularly focusing on
clusters with low agreement. The process includes:
\enumerate{
\item Initial voting by all LLMs
\item Identification of controversial clusters
\item Detailed discussion for controversial clusters
\item Final summary by a designated LLM (default: Claude)
}

This function implements an interactive voting and discussion mechanism where multiple LLMs
collaborate to reach a consensus on cell type annotations, particularly focusing on
clusters with low agreement. The process includes:
\enumerate{
\item Initial voting by all LLMs
\item Identification of controversial clusters
\item Detailed discussion for controversial clusters
\item Final summary by a designated LLM (default: Claude)
}
}
